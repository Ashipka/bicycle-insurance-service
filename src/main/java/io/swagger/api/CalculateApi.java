/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.43).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.CalculateBody;
import io.swagger.model.PremiumResponse;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import jakarta.validation.Valid;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2023-05-20T17:32:16.528247+02:00[Europe/Warsaw]")
@Validated
public interface CalculateApi {

    @Operation(summary = "Calculate premiums for bicycle insurance policies", description = "Given a list of bicycle objects, this API will calculate the total premium associated with each bicycle.  ", tags={  })
    @ApiResponses(value = {
        @ApiResponse(responseCode = "200", description = "Successfully calculated premiums and risks for bicycle policies", content = @Content(mediaType = "application/json", schema = @Schema(implementation = PremiumResponse.class))),

        @ApiResponse(responseCode = "400", description = "Invalid input provided"),

        @ApiResponse(responseCode = "500", description = "Server error occurred") })
    @RequestMapping(value = "/calculate",
        produces = { "application/json" },
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<PremiumResponse> calculatePost(@Parameter(in = ParameterIn.DEFAULT, description = "List of bicycle objects for which to calculate premiums", required=true, schema=@Schema()) @Valid @RequestBody CalculateBody body);

}

